{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useQuery, useQueryClient } from 'react-query';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants'; // for when we need a query function for useQuery\n\nasync function getTrainings() {\n  const {\n    data\n  } = await axiosInstance.get('/trainings');\n  return data;\n}\n\nexport function useTrainings(key) {\n  _s();\n\n  const fallback = [];\n  const {\n    data = fallback\n  } = useQuery(key || queryKeys.trainings, getTrainings);\n  return data;\n}\n\n_s(useTrainings, \"Dt1zu2A8Sa6608pid1m3JMfgG5k=\", false, function () {\n  return [useQuery];\n});\n\nexport function usePrefetchTrainings() {\n  _s2();\n\n  const queryClient = useQueryClient();\n  queryClient.prefetchQuery(queryKeys.trainings, getTrainings);\n}\n\n_s2(usePrefetchTrainings, \"4R+oYVB2Uc11P7bp1KcuhpkfaTw=\", false, function () {\n  return [useQueryClient];\n});","map":{"version":3,"sources":["/Users/work/Documents/Projects/study/fitness-center/client/src/components/trainings/hooks/useTrainings.ts"],"names":["useQuery","useQueryClient","axiosInstance","queryKeys","getTrainings","data","get","useTrainings","key","fallback","trainings","usePrefetchTrainings","queryClient","prefetchQuery"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,cAAnB,QAAyC,aAAzC;AAGA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,SAAT,QAA0B,gCAA1B,C,CAEA;;AACA,eAAeC,YAAf,GAAmD;AACjD,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMH,aAAa,CAACI,GAAd,CAAkB,YAAlB,CAAvB;AAEA,SAAOD,IAAP;AACD;;AAED,OAAO,SAASE,YAAT,CAAsBC,GAAtB,EAA6C;AAAA;;AAClD,QAAMC,QAAQ,GAAG,EAAjB;AACA,QAAM;AAAEJ,IAAAA,IAAI,GAAGI;AAAT,MAAsBT,QAAQ,CAClCQ,GAAG,IAAIL,SAAS,CAACO,SADiB,EAElCN,YAFkC,CAApC;AAKA,SAAOC,IAAP;AACD;;GAReE,Y;UAEcP,Q;;;AAQ9B,OAAO,SAASW,oBAAT,GAAsC;AAAA;;AAC3C,QAAMC,WAAW,GAAGX,cAAc,EAAlC;AAEAW,EAAAA,WAAW,CAACC,aAAZ,CAA0BV,SAAS,CAACO,SAApC,EAA+CN,YAA/C;AACD;;IAJeO,oB;UACMV,c","sourcesContent":["import { useQuery, useQueryClient } from 'react-query';\n\nimport type { Training } from '../../../../../shared/types';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\n\n// for when we need a query function for useQuery\nasync function getTrainings(): Promise<Training[]> {\n  const { data } = await axiosInstance.get('/trainings');\n\n  return data;\n}\n\nexport function useTrainings(key?: any): Training[] {\n  const fallback = [];\n  const { data = fallback } = useQuery(\n    key || queryKeys.trainings,\n    getTrainings,\n  );\n\n  return data;\n}\n\nexport function usePrefetchTrainings(): void {\n  const queryClient = useQueryClient();\n\n  queryClient.prefetchQuery(queryKeys.trainings, getTrainings);\n}\n"]},"metadata":{},"sourceType":"module"}