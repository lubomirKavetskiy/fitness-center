{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\n\n// for when we need a query function for useQuery\nasync function getStaff() {\n  const {\n    data\n  } = await axiosInstance.get('/staff');\n  return data;\n}\n\nexport function useStaff() {\n  _s();\n\n  // for filtering staff by treatment\n  const [filter, setFilter] = useState('all');\n  const selectFn = useCallback(data => {\n    var _data$treatmentNames;\n\n    return data === null || data === void 0 ? void 0 : (_data$treatmentNames = data.treatmentNames) === null || _data$treatmentNames === void 0 ? void 0 : _data$treatmentNames.includes(filter);\n  }, [filter]);\n  const fallback = [];\n  const {\n    data: staff = fallback\n  } = useQuery(queryKeys.staff, getStaff, {\n    select: selectFn\n  });\n  return {\n    staff,\n    filter,\n    setFilter\n  };\n}\n\n_s(useStaff, \"H5iJbTq0KjuiK8q6TAQVwM4BZcE=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["/Users/work/Documents/Projects/study/react-query/base-lazy-days/client/src/components/staff/hooks/useStaff.ts"],"names":["useCallback","useState","useQuery","axiosInstance","queryKeys","getStaff","data","get","useStaff","filter","setFilter","selectFn","treatmentNames","includes","fallback","staff","select"],"mappings":";;AAAA,SAAmCA,WAAnC,EAAgDC,QAAhD,QAAgE,OAAhE;AACA,SAASC,QAAT,QAAyB,aAAzB;AAGA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,SAAT,QAA0B,gCAA1B;;AAGA;AACA,eAAeC,QAAf,GAA4C;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMH,aAAa,CAACI,GAAd,CAAkB,QAAlB,CAAvB;AAEA,SAAOD,IAAP;AACD;;AAQD,OAAO,SAASE,QAAT,GAA8B;AAAA;;AACnC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAMU,QAAQ,GAAGX,WAAW,CACzBM,IAAD;AAAA;;AAAA,WAAUA,IAAV,aAAUA,IAAV,+CAAUA,IAAI,CAAEM,cAAhB,yDAAU,qBAAsBC,QAAtB,CAA+BJ,MAA/B,CAAV;AAAA,GAD0B,EAE1B,CAACA,MAAD,CAF0B,CAA5B;AAKA,QAAMK,QAAQ,GAAG,EAAjB;AACA,QAAM;AAAER,IAAAA,IAAI,EAAES,KAAK,GAAGD;AAAhB,MAA6BZ,QAAQ,CAACE,SAAS,CAACW,KAAX,EAAkBV,QAAlB,EAA4B;AACrEW,IAAAA,MAAM,EAAEL;AAD6D,GAA5B,CAA3C;AAIA,SAAO;AAAEI,IAAAA,KAAF;AAASN,IAAAA,MAAT;AAAiBC,IAAAA;AAAjB,GAAP;AACD;;GAfeF,Q;UAUqBN,Q","sourcesContent":["import { Dispatch, SetStateAction, useCallback, useState } from 'react';\nimport { useQuery } from 'react-query';\n\nimport type { Staff } from '../../../../../shared/types';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport { filterByTreatment } from '../utils';\n\n// for when we need a query function for useQuery\nasync function getStaff(): Promise<Staff[]> {\n  const { data } = await axiosInstance.get('/staff');\n\n  return data;\n}\n\ninterface UseStaff {\n  staff: Staff[];\n  filter: string;\n  setFilter: Dispatch<SetStateAction<string>>;\n}\n\nexport function useStaff(): UseStaff {\n  // for filtering staff by treatment\n  const [filter, setFilter] = useState('all');\n\n  const selectFn = useCallback(\n    (data) => data?.treatmentNames?.includes(filter),\n    [filter],\n  );\n\n  const fallback = [];\n  const { data: staff = fallback } = useQuery(queryKeys.staff, getStaff, {\n    select: selectFn,\n  });\n\n  return { staff, filter, setFilter };\n}\n"]},"metadata":{},"sourceType":"module"}