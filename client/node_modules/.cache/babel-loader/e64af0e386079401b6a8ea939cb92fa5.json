{"ast":null,"code":"import dayjs from 'dayjs';\nexport function appointmentInPast(appointmentData) {\n  const now = dayjs();\n  return dayjs(appointmentData.dateTime) < now;\n}\nexport function getAppointmentColor(appointmentData, userId) {\n  const taken = !!appointmentData.userId;\n  const textColor = 'white';\n  let cursor = 'pointer';\n\n  if (taken || appointmentInPast(appointmentData)) {\n    const bgColor = appointmentData.userId === userId ? 'blue.400' : 'red.400';\n    if (appointmentData.userId !== userId) cursor = 'not-allowed';\n    return [textColor, bgColor, cursor];\n  }\n\n  return [textColor, 'green.400', cursor];\n}\nexport function getAvailableAppointments(appointments, user) {\n  // clone so as not to mutate argument directly\n  const filteredAppointments = { ...appointments\n  }; // only keep appointments that are open (or taken by the logged-in user) and are not in the past)\n\n  Object.keys(filteredAppointments).forEach(date => {\n    filteredAppointments[date] = filteredAppointments[date].filter(appointment => (!appointment.userId || appointment.userId === (user === null || user === void 0 ? void 0 : user.id)) && !appointmentInPast(appointment));\n  });\n  return filteredAppointments;\n}","map":{"version":3,"sources":["/Users/work/Documents/Projects/study/fitness-center/client/src/components/appointments/utils.ts"],"names":["dayjs","appointmentInPast","appointmentData","now","dateTime","getAppointmentColor","userId","taken","textColor","cursor","bgColor","getAvailableAppointments","appointments","user","filteredAppointments","Object","keys","forEach","date","filter","appointment","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAQA,OAAO,SAASC,iBAAT,CAA2BC,eAA3B,EAAkE;AACvE,QAAMC,GAAG,GAAGH,KAAK,EAAjB;AACA,SAAOA,KAAK,CAACE,eAAe,CAACE,QAAjB,CAAL,GAAkCD,GAAzC;AACD;AAED,OAAO,SAASE,mBAAT,CACLH,eADK,EAELI,MAFK,EAGqB;AAC1B,QAAMC,KAAK,GAAG,CAAC,CAACL,eAAe,CAACI,MAAhC;AACA,QAAME,SAAS,GAAG,OAAlB;AACA,MAAIC,MAAM,GAAG,SAAb;;AAEA,MAAIF,KAAK,IAAIN,iBAAiB,CAACC,eAAD,CAA9B,EAAiD;AAC/C,UAAMQ,OAAO,GAAGR,eAAe,CAACI,MAAhB,KAA2BA,MAA3B,GAAoC,UAApC,GAAiD,SAAjE;AAEA,QAAIJ,eAAe,CAACI,MAAhB,KAA2BA,MAA/B,EAAuCG,MAAM,GAAG,aAAT;AAEvC,WAAO,CAACD,SAAD,EAAYE,OAAZ,EAAqBD,MAArB,CAAP;AACD;;AAED,SAAO,CAACD,SAAD,EAAY,WAAZ,EAAyBC,MAAzB,CAAP;AACD;AAED,OAAO,SAASE,wBAAT,CACLC,YADK,EAELC,IAFK,EAGe;AACpB;AACA,QAAMC,oBAAoB,GAAG,EAAE,GAAGF;AAAL,GAA7B,CAFoB,CAIpB;;AACAG,EAAAA,MAAM,CAACC,IAAP,CAAYF,oBAAZ,EAAkCG,OAAlC,CAA2CC,IAAD,IAAU;AAClDJ,IAAAA,oBAAoB,CAACI,IAAD,CAApB,GAA6BJ,oBAAoB,CAACI,IAAD,CAApB,CAA2BC,MAA3B,CAC1BC,WAAD,IACE,CAAC,CAACA,WAAW,CAACd,MAAb,IAAuBc,WAAW,CAACd,MAAZ,MAAuBO,IAAvB,aAAuBA,IAAvB,uBAAuBA,IAAI,CAAEQ,EAA7B,CAAxB,KACA,CAACpB,iBAAiB,CAACmB,WAAD,CAHO,CAA7B;AAKD,GAND;AAQA,SAAON,oBAAP;AACD","sourcesContent":["import dayjs from 'dayjs';\n\nimport type {\n  Appointment,\n  AppointmentDateMap,\n  User,\n} from '../../../../shared/types';\n\nexport function appointmentInPast(appointmentData: Appointment): boolean {\n  const now = dayjs();\n  return dayjs(appointmentData.dateTime) < now;\n}\n\nexport function getAppointmentColor(\n  appointmentData: Appointment,\n  userId?: number,\n): [string, string, string] {\n  const taken = !!appointmentData.userId;\n  const textColor = 'white';\n  let cursor = 'pointer';\n\n  if (taken || appointmentInPast(appointmentData)) {\n    const bgColor = appointmentData.userId === userId ? 'blue.400' : 'red.400';\n\n    if (appointmentData.userId !== userId) cursor = 'not-allowed';\n\n    return [textColor, bgColor, cursor];\n  }\n\n  return [textColor, 'green.400', cursor];\n}\n\nexport function getAvailableAppointments(\n  appointments: AppointmentDateMap,\n  user: User | null,\n): AppointmentDateMap {\n  // clone so as not to mutate argument directly\n  const filteredAppointments = { ...appointments };\n\n  // only keep appointments that are open (or taken by the logged-in user) and are not in the past)\n  Object.keys(filteredAppointments).forEach((date) => {\n    filteredAppointments[date] = filteredAppointments[date].filter(\n      (appointment: Appointment) =>\n        (!appointment.userId || appointment.userId === user?.id) &&\n        !appointmentInPast(appointment),\n    );\n  });\n\n  return filteredAppointments;\n}\n"]},"metadata":{},"sourceType":"module"}