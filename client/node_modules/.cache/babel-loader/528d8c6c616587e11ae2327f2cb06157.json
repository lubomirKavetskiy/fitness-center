{"ast":null,"code":"var _jsxFileName = \"/Users/work/Documents/Projects/study/fitness-center/client/src/components/trainings/Trainings.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Heading, HStack } from '@chakra-ui/react';\nimport { useTreatments } from './hooks/useTreatments';\nimport { Treatment } from './Training';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Trainings() {\n  _s();\n\n  // replace with data from React Query\n  const trainings = useTreatments();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      mt: 10,\n      align: \"center\",\n      children: \"Available Trainings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HStack, {\n      m: 10,\n      spacing: 8,\n      justify: \"center\",\n      children: trainings === null || trainings === void 0 ? void 0 : trainings.map(treatmentData => /*#__PURE__*/_jsxDEV(Treatment, {\n        treatmentData: treatmentData\n      }, treatmentData.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Trainings, \"H3xw85DI3bmzTpexsSa0G8j6Qok=\", false, function () {\n  return [useTreatments];\n});\n\n_c = Trainings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Trainings\");","map":{"version":3,"sources":["/Users/work/Documents/Projects/study/fitness-center/client/src/components/trainings/Trainings.tsx"],"names":["Box","Heading","HStack","useTreatments","Treatment","Trainings","trainings","map","treatmentData","id"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,OAAd,EAAuBC,MAAvB,QAAqC,kBAArC;AAGA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,SAAT,QAA0B,YAA1B;;AAEA,OAAO,SAASC,SAAT,GAAmC;AAAA;;AACxC;AACA,QAAMC,SAAS,GAAGH,aAAa,EAA/B;AAEA,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,EAAE,EAAE,EAAb;AAAiB,MAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,MAAD;AAAQ,MAAA,CAAC,EAAE,EAAX;AAAe,MAAA,OAAO,EAAE,CAAxB;AAA2B,MAAA,OAAO,EAAC,QAAnC;AAAA,gBACGG,SADH,aACGA,SADH,uBACGA,SAAS,CAAEC,GAAX,CAAgBC,aAAD,iBACd,QAAC,SAAD;AAAkC,QAAA,aAAa,EAAEA;AAAjD,SAAgBA,aAAa,CAACC,EAA9B;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAhBeJ,S;UAEIF,a;;;KAFJE,S","sourcesContent":["import { Box, Heading, HStack } from '@chakra-ui/react';\nimport { ReactElement } from 'react';\n\nimport { useTreatments } from './hooks/useTreatments';\nimport { Treatment } from './Training';\n\nexport function Trainings(): ReactElement {\n  // replace with data from React Query\n  const trainings = useTreatments();\n\n  return (\n    <Box>\n      <Heading mt={10} align=\"center\">\n        Available Trainings\n      </Heading>\n      <HStack m={10} spacing={8} justify=\"center\">\n        {trainings?.map((treatmentData) => (\n          <Treatment key={treatmentData.id} treatmentData={treatmentData} />\n        ))}\n      </HStack>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}